{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react'; // https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nvar useInterval = function useInterval(callback, delay) {\n  _s();\n\n  var savedCallback = useRef();\n  useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(function () {\n    var handler = function handler() {\n      return savedCallback.current.apply(savedCallback, arguments);\n    };\n\n    if (delay !== null) {\n      var id = setInterval(handler, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport default useInterval;","map":{"version":3,"sources":["/home/joao/Develop/tests/nextjs-reduxtoolkit-saga-apollo/nextjs-reduxtoolkit-saga-apollo/lib/useInterval.js"],"names":["useEffect","useRef","useInterval","callback","delay","savedCallback","current","handler","id","setInterval","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC,C,CAEA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,KAAX,EAAqB;AAAA;;AACvC,MAAMC,aAAa,GAAGJ,MAAM,EAA5B;AACAD,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,aAAa,CAACC,OAAd,GAAwBH,QAAxB;AACD,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAGAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMO,OAAO,GAAG,SAAVA,OAAU;AAAA,aAAaF,aAAa,CAACC,OAAd,OAAAD,aAAa,YAA1B;AAAA,KAAhB;;AAEA,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClB,UAAMI,EAAE,GAAGC,WAAW,CAACF,OAAD,EAAUH,KAAV,CAAtB;AACA,aAAO;AAAA,eAAMM,aAAa,CAACF,EAAD,CAAnB;AAAA,OAAP;AACD;AACF,GAPQ,EAON,CAACJ,KAAD,CAPM,CAAT;AAQD,CAbD;;GAAMF,W;;AAeN,eAAeA,WAAf","sourcesContent":["import { useEffect, useRef } from 'react'\n\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef()\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n  useEffect(() => {\n    const handler = (...args) => savedCallback.current(...args)\n\n    if (delay !== null) {\n      const id = setInterval(handler, delay)\n      return () => clearInterval(id)\n    }\n  }, [delay])\n}\n\nexport default useInterval\n"]},"metadata":{},"sourceType":"module"}