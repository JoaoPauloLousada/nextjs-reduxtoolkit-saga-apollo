{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/joao/Develop/tests/nextjs-reduxtoolkit-saga-apollo/nextjs-reduxtoolkit-saga-apollo/pages/notes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Dynamic from 'next/dynamic';\nimport Head from 'next/head';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddNoteForm from '../components/add-note';\nimport { deleteNote, loadNotes, selectNotes } from '../lib/slices/notesSlice';\nvar EditNoteForm = Dynamic(_c = function _c() {\n  return import('../components/edit-note');\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('../components/edit-note')];\n    },\n    modules: ['../components/edit-note']\n  }\n});\n_c2 = EditNoteForm;\n\nvar Notes = function Notes() {\n  _s();\n\n  var _useState = useState(),\n      selectedNote = _useState[0],\n      setSelectedNote = _useState[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(selectNotes),\n      notes = _useSelector.notes;\n\n  useEffect(function () {\n    function dispatchLoadNotes() {\n      return _dispatchLoadNotes.apply(this, arguments);\n    }\n\n    function _dispatchLoadNotes() {\n      _dispatchLoadNotes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(loadNotes());\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _dispatchLoadNotes.apply(this, arguments);\n    }\n\n    dispatchLoadNotes();\n  }, [dispatch]);\n\n  var renderNote = function renderNote(note) {\n    return __jsx(\"li\", {\n      key: note.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }\n    }, __jsx(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, note.title), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, note.content), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }), __jsx(\"button\", {\n      \"aria-label\": \"Delete note with title: \".concat(note.title),\n      onClick: function onClick() {\n        return dispatch(deleteNote(note.id));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, \"\\uD83D\\uDDD1\\uFE0F\"), __jsx(\"button\", {\n      onClick: function onClick() {\n        return setSelectedNote(note);\n      },\n      \"aria-label\": \"Edit note with title: \".concat(note.title),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, \"\\u270F\\uFE0F\"));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Next.js with Redux Toolkit | Notes App\")), __jsx(AddNoteForm, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), __jsx(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"All Notes\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, notes.map(renderNote)), __jsx(EditNoteForm, {\n    note: selectedNote,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(Notes, \"IPYH6smox7oMsTqSVFyaatSEaK4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c3 = Notes;\nexport default Notes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"EditNoteForm$Dynamic\");\n$RefreshReg$(_c2, \"EditNoteForm\");\n$RefreshReg$(_c3, \"Notes\");","map":{"version":3,"sources":["/home/joao/Develop/tests/nextjs-reduxtoolkit-saga-apollo/nextjs-reduxtoolkit-saga-apollo/pages/notes.js"],"names":["Dynamic","Head","useEffect","useState","useDispatch","useSelector","AddNoteForm","deleteNote","loadNotes","selectNotes","EditNoteForm","ssr","Notes","selectedNote","setSelectedNote","dispatch","notes","dispatchLoadNotes","renderNote","note","id","title","content","map"],"mappings":"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","sourcesContent":["import Dynamic from 'next/dynamic'\nimport Head from 'next/head'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport AddNoteForm from '../components/add-note'\nimport { deleteNote, loadNotes, selectNotes } from '../lib/slices/notesSlice'\n\nconst EditNoteForm = Dynamic(import('../components/edit-note'), { ssr: false })\nconst Notes = () => {\n  const [selectedNote, setSelectedNote] = useState()\n  const dispatch = useDispatch()\n  const { notes } = useSelector(selectNotes)\n\n  useEffect(() => {\n    async function dispatchLoadNotes() {\n      await dispatch(loadNotes())\n    }\n    dispatchLoadNotes()\n  }, [dispatch])\n\n  const renderNote = (note) => (\n    <li key={note.id}>\n      <strong>{note.title}</strong>\n      <br />\n      <span>{note.content}</span>\n      <br />\n      <button\n        aria-label={`Delete note with title: ${note.title}`}\n        onClick={() => dispatch(deleteNote(note.id))}\n      >\n        🗑️\n      </button>\n      <button\n        onClick={() => setSelectedNote(note)}\n        aria-label={`Edit note with title: ${note.title}`}\n      >\n        ✏️\n      </button>\n    </li>\n  )\n\n  return (\n    <>\n      <Head>\n        <title>Next.js with Redux Toolkit | Notes App</title>\n      </Head>\n      <AddNoteForm />\n      <hr />\n      <h3>All Notes</h3>\n      <ul>{notes.map(renderNote)}</ul>\n      <EditNoteForm note={selectedNote} />\n    </>\n  )\n}\n\nexport default Notes\n"]},"metadata":{},"sourceType":"module"}