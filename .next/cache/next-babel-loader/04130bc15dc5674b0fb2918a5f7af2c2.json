{"ast":null,"code":"import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit';\nexport const addNote = createAsyncThunk('notes/addNote', async (newNote, thunkAPI) => {\n  try {\n    const response = await fetch('/api/notes', {\n      method: 'POST',\n      body: JSON.stringify(newNote),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      return thunkAPI.rejectWithValue({\n        error: error.errors\n      });\n    }\n\n    return response.json();\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nexport const loadNotes = createAsyncThunk('notes/loadNotes', async (_, thunkAPI) => {\n  try {\n    const response = await fetch('/api/notes');\n    return response.json();\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nexport const editNote = createAsyncThunk('notes/editNote', async (updates, thunkAPI) => {\n  const {\n    id,\n    title,\n    content\n  } = updates;\n\n  try {\n    const response = await fetch(`/api/notes?noteId=${id}`, {\n      method: 'PUT',\n      body: JSON.stringify({\n        title,\n        content\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.json();\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nexport const deleteNote = createAsyncThunk('notes/deleteNote', async (id, thunkAPI) => {\n  try {\n    await fetch(`/api/notes?noteId=${id}`, {\n      method: 'DELETE'\n    });\n    return id;\n  } catch (error) {\n    return thunkAPI.rejectWithValue({\n      error: error.message\n    });\n  }\n});\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState: {\n    notes: [],\n    loading: 'idle'\n  },\n  reducers: {},\n  extraReducers: {\n    [addNote.pending]: state => {\n      delete state.error;\n    },\n    [addNote.fulfilled]: (state, action) => {\n      state.notes.push(action.payload);\n    },\n    [addNote.rejected]: (state, action) => {\n      state.error = action.payload.error;\n    },\n    [loadNotes.pending]: state => {\n      state.notes = [];\n      state.loading = 'loading';\n    },\n    [loadNotes.fulfilled]: (state, action) => {\n      state.notes = action.payload;\n      state.loading = 'loaded';\n    },\n    [loadNotes.rejected]: (state, action) => {\n      state.loading = 'error';\n      state.error = action.payload.error;\n    },\n    [editNote.pending]: (state, action) => {\n      const note = state.notes.find(note => note.id === action.meta.arg.id);\n      state.tempNote = Object.assign({}, note);\n      note.title = action.meta.arg.title || note.title;\n      note.content = action.meta.arg.content || note.content;\n    },\n    [editNote.fulfilled]: (state, action) => {\n      const note = state.notes.find(note => note.id === action.payload.id);\n      delete state.tempNote;\n      Object.assign(note, action.payload);\n    },\n    [editNote.rejected]: (state, action) => {\n      const note = state.notes.find(note => note.id === action.meta.arg.id);\n      state.error = action.payload.error || action.error.message;\n      Object.assign(note, state.tempNote);\n      delete state.tempNote;\n    },\n    [deleteNote.pending]: (state, action) => {\n      const position = state.notes.findIndex(note => note.id === action.meta.arg);\n      state.backupNote = Object.assign({}, state.notes[position]);\n      state.backupPosition = position;\n      state.notes.splice(position, 1);\n    },\n    [deleteNote.fulfilled]: state => {\n      delete state.backupNote;\n      delete state.backupPosition;\n    },\n    [deleteNote.rejected]: state => {\n      state.notes.splice(state.backupPosition, 0, state.backupNote);\n      delete state.backupPosition;\n      delete state.backupNote;\n    }\n  }\n});\nexport const selectNotes = createSelector(state => ({\n  notes: state.notes.notes,\n  error: state.notes.error\n}), state => state);\nexport default notesSlice.reducer;","map":{"version":3,"sources":["/home/joao/Develop/tests/nextjs-reduxtoolkit-saga-apollo/nextjs-reduxtoolkit-saga-apollo/lib/slices/notesSlice.js"],"names":["createAsyncThunk","createSelector","createSlice","addNote","newNote","thunkAPI","response","fetch","method","body","JSON","stringify","headers","ok","error","json","rejectWithValue","errors","message","loadNotes","_","editNote","updates","id","title","content","deleteNote","notesSlice","name","initialState","notes","loading","reducers","extraReducers","pending","state","fulfilled","action","push","payload","rejected","note","find","meta","arg","tempNote","Object","assign","position","findIndex","backupNote","backupPosition","splice","selectNotes","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSelector, createSlice } from '@reduxjs/toolkit'\n\nexport const addNote = createAsyncThunk(\n  'notes/addNote',\n  async (newNote, thunkAPI) => {\n    try {\n      const response = await fetch('/api/notes', {\n        method: 'POST',\n        body: JSON.stringify(newNote),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (!response.ok) {\n        const error = await response.json()\n\n        return thunkAPI.rejectWithValue({ error: error.errors })\n      }\n\n      return response.json()\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message })\n    }\n  }\n)\n\nexport const loadNotes = createAsyncThunk(\n  'notes/loadNotes',\n  async (_, thunkAPI) => {\n    try {\n      const response = await fetch('/api/notes')\n\n      return response.json()\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message })\n    }\n  }\n)\n\nexport const editNote = createAsyncThunk(\n  'notes/editNote',\n  async (updates, thunkAPI) => {\n    const { id, title, content } = updates\n\n    try {\n      const response = await fetch(`/api/notes?noteId=${id}`, {\n        method: 'PUT',\n        body: JSON.stringify({ title, content }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      return response.json()\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message })\n    }\n  }\n)\n\nexport const deleteNote = createAsyncThunk(\n  'notes/deleteNote',\n  async (id, thunkAPI) => {\n    try {\n      await fetch(`/api/notes?noteId=${id}`, { method: 'DELETE' })\n      return id\n    } catch (error) {\n      return thunkAPI.rejectWithValue({ error: error.message })\n    }\n  }\n)\n\nconst notesSlice = createSlice({\n  name: 'notes',\n  initialState: {\n    notes: [],\n    loading: 'idle',\n  },\n  reducers: {},\n  extraReducers: {\n    [addNote.pending]: (state) => {\n      delete state.error\n    },\n    [addNote.fulfilled]: (state, action) => {\n      state.notes.push(action.payload)\n    },\n    [addNote.rejected]: (state, action) => {\n      state.error = action.payload.error\n    },\n    [loadNotes.pending]: (state) => {\n      state.notes = []\n      state.loading = 'loading'\n    },\n    [loadNotes.fulfilled]: (state, action) => {\n      state.notes = action.payload\n      state.loading = 'loaded'\n    },\n    [loadNotes.rejected]: (state, action) => {\n      state.loading = 'error'\n      state.error = action.payload.error\n    },\n    [editNote.pending]: (state, action) => {\n      const note = state.notes.find((note) => note.id === action.meta.arg.id)\n      state.tempNote = Object.assign({}, note)\n      note.title = action.meta.arg.title || note.title\n      note.content = action.meta.arg.content || note.content\n    },\n    [editNote.fulfilled]: (state, action) => {\n      const note = state.notes.find((note) => note.id === action.payload.id)\n      delete state.tempNote\n      Object.assign(note, action.payload)\n    },\n    [editNote.rejected]: (state, action) => {\n      const note = state.notes.find((note) => note.id === action.meta.arg.id)\n      state.error = action.payload.error || action.error.message\n      Object.assign(note, state.tempNote)\n      delete state.tempNote\n    },\n    [deleteNote.pending]: (state, action) => {\n      const position = state.notes.findIndex(\n        (note) => note.id === action.meta.arg\n      )\n      state.backupNote = Object.assign({}, state.notes[position])\n      state.backupPosition = position\n      state.notes.splice(position, 1)\n    },\n    [deleteNote.fulfilled]: (state) => {\n      delete state.backupNote\n      delete state.backupPosition\n    },\n    [deleteNote.rejected]: (state) => {\n      state.notes.splice(state.backupPosition, 0, state.backupNote)\n      delete state.backupPosition\n      delete state.backupNote\n    },\n  },\n})\n\nexport const selectNotes = createSelector(\n  (state) => ({\n    notes: state.notes.notes,\n    error: state.notes.error,\n  }),\n  (state) => state\n)\n\nexport default notesSlice.reducer\n"]},"metadata":{},"sourceType":"module"}