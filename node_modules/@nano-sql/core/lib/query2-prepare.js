Object.defineProperty(exports, "__esModule", { value: true });
var InanoSQLActions;
(function (InanoSQLActions) {
    InanoSQLActions[InanoSQLActions["union"] = 0] = "union";
    InanoSQLActions[InanoSQLActions["graph"] = 1] = "graph";
    InanoSQLActions[InanoSQLActions["join"] = 2] = "join";
    InanoSQLActions[InanoSQLActions["order"] = 3] = "order";
    InanoSQLActions[InanoSQLActions["group"] = 4] = "group";
    InanoSQLActions[InanoSQLActions["selectFull"] = 5] = "selectFull";
    InanoSQLActions[InanoSQLActions["selectIndex"] = 6] = "selectIndex";
    InanoSQLActions[InanoSQLActions["selectPK"] = 7] = "selectPK";
    InanoSQLActions[InanoSQLActions["range"] = 8] = "range";
    InanoSQLActions[InanoSQLActions["where"] = 9] = "where";
    InanoSQLActions[InanoSQLActions["distinct"] = 10] = "distinct";
    InanoSQLActions[InanoSQLActions["update"] = 11] = "update";
    InanoSQLActions[InanoSQLActions["upsert"] = 12] = "upsert";
    InanoSQLActions[InanoSQLActions["delete"] = 13] = "delete";
    InanoSQLActions[InanoSQLActions["conform"] = 14] = "conform";
    InanoSQLActions[InanoSQLActions["rebuildIndexes"] = 15] = "rebuildIndexes";
    InanoSQLActions[InanoSQLActions["clone"] = 16] = "clone";
})(InanoSQLActions = exports.InanoSQLActions || (exports.InanoSQLActions = {}));
/**
 * Builds an optimized list of actions for the query engine to perform.
 *
 * Once the list is built, we can execute the query.
 *
 * @param {InanoSQLInstance} nSQL
 * @param {InanoSQLQueryAST} pQuery
 * @returns {InanoSQLQueryActions[]}
 */
exports._prepareQuery = function (nSQL, pQuery) {
    var queryWillSelect = true;
    if (["select", "upsert", "delete"].indexOf(pQuery.action)) {
    }
    return [];
};
//# sourceMappingURL=query2-prepare.js.map