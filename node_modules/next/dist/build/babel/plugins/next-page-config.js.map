{"version":3,"sources":["../../../../build/babel/plugins/next-page-config.ts"],"names":["CONFIG_KEY","replaceBundle","path","t","parentPath","replaceWith","program","variableDeclaration","variableDeclarator","identifier","STRING_LITERAL_DROP_BUNDLE","stringLiteral","Date","now","errorMessage","state","details","pageName","filename","split","cwd","pop","nextPageConfig","types","visitor","Program","enter","traverse","ExportDeclaration","exportPath","exportState","BabelTypes","isExportNamedDeclaration","node","specifiers","some","specifier","exported","name","isStringLiteral","source","Error","ExportNamedDeclaration","bundleDropped","declaration","length","config","declarations","scope","getBinding","filter","Boolean","isIdentifier","id","isImportSpecifier","isObjectExpression","init","got","type","prop","properties","isSpreadElement","key","isObjectProperty","isBooleanLiteral","value","amp","file","opts","caller","isDev"],"mappings":"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","sourcesContent":["import { NodePath, PluginObj, types as BabelTypes } from '@babel/core'\nimport { PageConfig } from 'next/types'\nimport { STRING_LITERAL_DROP_BUNDLE } from '../../../next-server/lib/constants'\n\nconst CONFIG_KEY = 'config'\n\n// replace program path with just a variable with the drop identifier\nfunction replaceBundle(path: any, t: typeof BabelTypes): void {\n  path.parentPath.replaceWith(\n    t.program(\n      [\n        t.variableDeclaration('const', [\n          t.variableDeclarator(\n            t.identifier(STRING_LITERAL_DROP_BUNDLE),\n            t.stringLiteral(`${STRING_LITERAL_DROP_BUNDLE} ${Date.now()}`)\n          ),\n        ]),\n      ],\n      []\n    )\n  )\n}\n\nfunction errorMessage(state: any, details: string): string {\n  const pageName =\n    (state.filename || '').split(state.cwd || '').pop() || 'unknown'\n  return `Invalid page config export found. ${details} in file ${pageName}. See: https://err.sh/vercel/next.js/invalid-page-config`\n}\n\ninterface ConfigState {\n  bundleDropped?: boolean\n}\n\n// config to parsing pageConfig for client bundles\nexport default function nextPageConfig({\n  types: t,\n}: {\n  types: typeof BabelTypes\n}): PluginObj {\n  return {\n    visitor: {\n      Program: {\n        enter(path, state: ConfigState) {\n          path.traverse(\n            {\n              ExportDeclaration(exportPath, exportState) {\n                if (\n                  BabelTypes.isExportNamedDeclaration(exportPath) &&\n                  (exportPath.node as BabelTypes.ExportNamedDeclaration).specifiers?.some(\n                    (specifier) => {\n                      return specifier.exported.name === CONFIG_KEY\n                    }\n                  ) &&\n                  BabelTypes.isStringLiteral(\n                    (exportPath.node as BabelTypes.ExportNamedDeclaration)\n                      .source\n                  )\n                ) {\n                  throw new Error(\n                    errorMessage(\n                      exportState,\n                      'Expected object but got export from'\n                    )\n                  )\n                }\n              },\n              ExportNamedDeclaration(\n                exportPath: NodePath<BabelTypes.ExportNamedDeclaration>,\n                exportState: any\n              ) {\n                if (\n                  exportState.bundleDropped ||\n                  (!exportPath.node.declaration &&\n                    exportPath.node.specifiers.length === 0)\n                ) {\n                  return\n                }\n\n                const config: PageConfig = {}\n                const declarations = [\n                  ...(exportPath.node.declaration?.declarations || []),\n                  exportPath.scope.getBinding(CONFIG_KEY)?.path.node,\n                ].filter(Boolean)\n\n                for (const declaration of declarations) {\n                  if (\n                    !BabelTypes.isIdentifier(declaration.id, {\n                      name: CONFIG_KEY,\n                    })\n                  ) {\n                    if (BabelTypes.isImportSpecifier(declaration)) {\n                      throw new Error(\n                        errorMessage(\n                          exportState,\n                          `Expected object but got import`\n                        )\n                      )\n                    }\n                    continue\n                  }\n\n                  if (!BabelTypes.isObjectExpression(declaration.init)) {\n                    const got = declaration.init\n                      ? declaration.init.type\n                      : 'undefined'\n                    throw new Error(\n                      errorMessage(\n                        exportState,\n                        `Expected object but got ${got}`\n                      )\n                    )\n                  }\n\n                  for (const prop of declaration.init.properties) {\n                    if (BabelTypes.isSpreadElement(prop)) {\n                      throw new Error(\n                        errorMessage(\n                          exportState,\n                          `Property spread is not allowed`\n                        )\n                      )\n                    }\n                    const { name } = prop.key\n                    if (BabelTypes.isIdentifier(prop.key, { name: 'amp' })) {\n                      if (!BabelTypes.isObjectProperty(prop)) {\n                        throw new Error(\n                          errorMessage(\n                            exportState,\n                            `Invalid property \"${name}\"`\n                          )\n                        )\n                      }\n                      if (\n                        !BabelTypes.isBooleanLiteral(prop.value) &&\n                        !BabelTypes.isStringLiteral(prop.value)\n                      ) {\n                        throw new Error(\n                          errorMessage(\n                            exportState,\n                            `Invalid value for \"${name}\"`\n                          )\n                        )\n                      }\n                      config.amp = prop.value.value as PageConfig['amp']\n                    }\n                  }\n                }\n\n                if (config.amp === true) {\n                  if (!exportState.file?.opts?.caller.isDev) {\n                    // don't replace bundle in development so HMR can track\n                    // dependencies and trigger reload when they are changed\n                    replaceBundle(exportPath, t)\n                  }\n                  exportState.bundleDropped = true\n                  return\n                }\n              },\n            },\n            state\n          )\n        },\n      },\n    },\n  }\n}\n"]}