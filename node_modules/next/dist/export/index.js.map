{"version":3,"sources":["../../export/index.ts"],"names":["exists","existsOrig","createProgress","total","label","curProgress","progressSpinner","spinner","frames","interval","newText","text","console","log","stop","exportApp","dir","options","configuration","nextConfig","PHASE_EXPORT","threads","Math","max","length","distDir","telemetry","buildExport","Telemetry","record","cliCommand","isSrcDir","hasNowJson","cwd","isCustomServer","subFolders","trailingSlash","isLikeServerless","target","silent","Log","info","Error","buildId","BUILD_ID_FILE","pagesManifest","pages","require","SERVERLESS_DIRECTORY","SERVER_DIRECTORY","PAGES_MANIFEST","prerenderManifest","undefined","PRERENDER_MANIFEST","_","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","match","API_ROUTE","dynamicRoutes","add","outDir","outdir","promises","mkdir","recursive","EXPORT_DETAIL","JSON","stringify","version","outDirectory","success","CLIENT_STATIC_FILES_PATH","exportPathMap","CONFIG_FILE","defaultMap","renderOpts","nextExport","assetPrefix","replace","dev","hotReloader","basePath","canonicalBase","amp","isModern","experimental","modern","ampValidatorPath","validator","ampSkipValidation","skipValidation","ampOptimizerConfig","optimizer","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","global","__NEXT_DATA__","exportPaths","map","path","filteredPaths","filter","route","fallbackEnabledPages","key","has","fallback","size","join","SSG_FALLBACK_EXPORT_ERROR","warn","chalk","yellow","bold","progress","prefixes","statusMessage","pagesDataDir","ampValidations","hadValidationError","publicDir","CLIENT_PUBLIC_FILES_PATH","worker","Worker","resolve","maxRetries","numWorkers","enableWorkerThreads","workerThreads","exposedMethods","getStdout","pipe","process","stdout","getStderr","stderr","renderError","errorPaths","Promise","all","result","default","pathMap","serverless","optimizeFonts","optimizeImages","validation","ampValidationResult","Array","isArray","errors","error","push","fromBuildExportRevalidate","initialPageRevalidationMap","end","routes","srcRoute","pageName","pagePath","distPagesDir","substr","split","orig","htmlDest","sep","ampHtmlDest","jsonDest","copyFile","sort","flush"],"mappings":"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","sourcesContent":["import chalk from 'next/dist/compiled/chalk'\nimport findUp from 'next/dist/compiled/find-up'\nimport {\n  promises,\n  existsSync,\n  exists as existsOrig,\n  readFileSync,\n  writeFileSync,\n} from 'fs'\nimport Worker from 'jest-worker'\nimport { cpus } from 'os'\nimport { dirname, join, resolve, sep } from 'path'\nimport { promisify } from 'util'\nimport { AmpPageStatus, formatAmpMessages } from '../build/output/index'\nimport * as Log from '../build/output/log'\nimport createSpinner from '../build/spinner'\nimport { API_ROUTE, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\nimport { recursiveCopy } from '../lib/recursive-copy'\nimport { recursiveDelete } from '../lib/recursive-delete'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  CONFIG_FILE,\n  EXPORT_DETAIL,\n  PAGES_MANIFEST,\n  PHASE_EXPORT,\n  PRERENDER_MANIFEST,\n  SERVERLESS_DIRECTORY,\n  SERVER_DIRECTORY,\n} from '../next-server/lib/constants'\nimport loadConfig, {\n  isTargetLikeServerless,\n} from '../next-server/server/config'\nimport { eventCliSession } from '../telemetry/events'\nimport { Telemetry } from '../telemetry/storage'\nimport {\n  normalizePagePath,\n  denormalizePagePath,\n} from '../next-server/server/normalize-page-path'\nimport { loadEnvConfig } from '../lib/load-env-config'\nimport { PrerenderManifest } from '../build'\nimport type exportPage from './worker'\nimport { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport { getPagePath } from '../next-server/server/require'\n\nconst exists = promisify(existsOrig)\n\nconst createProgress = (total: number, label = 'Exporting') => {\n  let curProgress = 0\n  let progressSpinner = createSpinner(`${label} (${curProgress}/${total})`, {\n    spinner: {\n      frames: [\n        '[    ]',\n        '[=   ]',\n        '[==  ]',\n        '[=== ]',\n        '[ ===]',\n        '[  ==]',\n        '[   =]',\n        '[    ]',\n        '[   =]',\n        '[  ==]',\n        '[ ===]',\n        '[====]',\n        '[=== ]',\n        '[==  ]',\n        '[=   ]',\n      ],\n      interval: 80,\n    },\n  })\n\n  return () => {\n    curProgress++\n\n    const newText = `${label} (${curProgress}/${total})`\n    if (progressSpinner) {\n      progressSpinner.text = newText\n    } else {\n      console.log(newText)\n    }\n\n    if (curProgress === total && progressSpinner) {\n      progressSpinner.stop()\n      console.log(newText)\n    }\n  }\n}\n\ntype ExportPathMap = {\n  [page: string]: { page: string; query?: { [key: string]: string } }\n}\n\ninterface ExportOptions {\n  outdir: string\n  silent?: boolean\n  threads?: number\n  pages?: string[]\n  buildExport?: boolean\n  statusMessage?: string\n}\n\nexport default async function exportApp(\n  dir: string,\n  options: ExportOptions,\n  configuration?: any\n): Promise<void> {\n  dir = resolve(dir)\n\n  // attempt to load global env values so they are available in next.config.js\n  loadEnvConfig(dir)\n\n  const nextConfig = configuration || loadConfig(PHASE_EXPORT, dir)\n  const threads = options.threads || Math.max(cpus().length - 1, 1)\n  const distDir = join(dir, nextConfig.distDir)\n\n  const telemetry = options.buildExport ? null : new Telemetry({ distDir })\n\n  if (telemetry) {\n    telemetry.record(\n      eventCliSession(PHASE_EXPORT, distDir, {\n        cliCommand: 'export',\n        isSrcDir: null,\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n      })\n    )\n  }\n\n  const subFolders = nextConfig.trailingSlash\n  const isLikeServerless = nextConfig.target !== 'server'\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`using build directory: ${distDir}`)\n  }\n\n  if (!existsSync(distDir)) {\n    throw new Error(\n      `Build directory ${distDir} does not exist. Make sure you run \"next build\" before running \"next start\" or \"next export\".`\n    )\n  }\n\n  const buildId = readFileSync(join(distDir, BUILD_ID_FILE), 'utf8')\n  const pagesManifest =\n    !options.pages &&\n    (require(join(\n      distDir,\n      isLikeServerless ? SERVERLESS_DIRECTORY : SERVER_DIRECTORY,\n      PAGES_MANIFEST\n    )) as PagesManifest)\n\n  let prerenderManifest: PrerenderManifest | undefined = undefined\n  try {\n    prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\n  } catch (_) {}\n\n  const excludedPrerenderRoutes = new Set<string>()\n  const pages = options.pages || Object.keys(pagesManifest)\n  const defaultPathMap: ExportPathMap = {}\n  let hasApiRoutes = false\n\n  for (const page of pages) {\n    // _document and _app are not real pages\n    // _error is exported as 404.html later on\n    // API Routes are Node.js functions\n\n    if (page.match(API_ROUTE)) {\n      hasApiRoutes = true\n      continue\n    }\n\n    if (page === '/_document' || page === '/_app' || page === '/_error') {\n      continue\n    }\n\n    // iSSG pages that are dynamic should not export templated version by\n    // default. In most cases, this would never work. There is no server that\n    // could run `getStaticProps`. If users make their page work lazily, they\n    // can manually add it to the `exportPathMap`.\n    if (prerenderManifest?.dynamicRoutes[page]) {\n      excludedPrerenderRoutes.add(page)\n      continue\n    }\n\n    defaultPathMap[page] = { page }\n  }\n\n  // Initialize the output directory\n  const outDir = options.outdir\n\n  if (outDir === join(dir, 'public')) {\n    throw new Error(\n      `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://err.sh/vercel/next.js/can-not-output-to-public`\n    )\n  }\n\n  await recursiveDelete(join(outDir))\n  await promises.mkdir(join(outDir, '_next', buildId), { recursive: true })\n\n  writeFileSync(\n    join(distDir, EXPORT_DETAIL),\n    JSON.stringify({\n      version: 1,\n      outDirectory: outDir,\n      success: false,\n    }),\n    'utf8'\n  )\n\n  // Copy static directory\n  if (!options.buildExport && existsSync(join(dir, 'static'))) {\n    if (!options.silent) {\n      Log.info('Copying \"static\" directory')\n    }\n    await recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\n  }\n\n  // Copy .next/static directory\n  if (\n    !options.buildExport &&\n    existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\n  ) {\n    if (!options.silent) {\n      Log.info('Copying \"static build\" directory')\n    }\n    await recursiveCopy(\n      join(distDir, CLIENT_STATIC_FILES_PATH),\n      join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\n    )\n  }\n\n  // Get the exportPathMap from the config file\n  if (typeof nextConfig.exportPathMap !== 'function') {\n    if (!options.silent) {\n      Log.info(\n        `No \"exportPathMap\" found in \"${CONFIG_FILE}\". Generating map from \"./pages\"`\n      )\n    }\n    nextConfig.exportPathMap = async (defaultMap: ExportPathMap) => {\n      return defaultMap\n    }\n  }\n\n  // Start the rendering process\n  const renderOpts = {\n    dir,\n    buildId,\n    nextExport: true,\n    assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\n    distDir,\n    dev: false,\n    hotReloader: null,\n    basePath: nextConfig.basePath,\n    canonicalBase: nextConfig.amp?.canonicalBase || '',\n    isModern: nextConfig.experimental.modern,\n    ampValidatorPath: nextConfig.experimental.amp?.validator || undefined,\n    ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\n    ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\n  }\n\n  const { serverRuntimeConfig, publicRuntimeConfig } = nextConfig\n\n  if (Object.keys(publicRuntimeConfig).length > 0) {\n    ;(renderOpts as any).runtimeConfig = publicRuntimeConfig\n  }\n\n  // We need this for server rendering the Link component.\n  ;(global as any).__NEXT_DATA__ = {\n    nextExport: true,\n  }\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`Launching ${threads} workers`)\n  }\n  const exportPathMap = await nextConfig.exportPathMap(defaultPathMap, {\n    dev: false,\n    dir,\n    outDir,\n    distDir,\n    buildId,\n  })\n\n  if (!exportPathMap['/404'] && !exportPathMap['/404.html']) {\n    exportPathMap['/404'] = exportPathMap['/404.html'] = {\n      page: '/_error',\n    }\n  }\n\n  // make sure to prevent duplicates\n  const exportPaths = [\n    ...new Set(\n      Object.keys(exportPathMap).map((path) =>\n        denormalizePagePath(normalizePagePath(path))\n      )\n    ),\n  ]\n\n  const filteredPaths = exportPaths.filter(\n    // Remove API routes\n    (route) => !exportPathMap[route].page.match(API_ROUTE)\n  )\n\n  if (filteredPaths.length !== exportPaths.length) {\n    hasApiRoutes = true\n  }\n\n  if (prerenderManifest && !options.buildExport) {\n    const fallbackEnabledPages = new Set()\n\n    for (const key of Object.keys(prerenderManifest.dynamicRoutes)) {\n      // only error if page is included in path map\n      if (!exportPathMap[key] && !excludedPrerenderRoutes.has(key)) {\n        continue\n      }\n\n      if (prerenderManifest.dynamicRoutes[key].fallback !== false) {\n        fallbackEnabledPages.add(key)\n      }\n    }\n\n    if (fallbackEnabledPages.size) {\n      throw new Error(\n        `Found pages with \\`fallback\\` enabled:\\n${[\n          ...fallbackEnabledPages,\n        ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\n      )\n    }\n  }\n\n  // Warn if the user defines a path for an API page\n  if (hasApiRoutes) {\n    if (!options.silent) {\n      Log.warn(\n        chalk.yellow(\n          `Statically exporting a Next.js application via \\`next export\\` disables API routes.`\n        ) +\n          `\\n` +\n          chalk.yellow(\n            `This command is meant for static-only hosts, and is` +\n              ' ' +\n              chalk.bold(`not necessary to make your application static.`)\n          ) +\n          `\\n` +\n          chalk.yellow(\n            `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\n          ) +\n          `\\n` +\n          chalk.yellow(\n            `Learn more: https://err.sh/vercel/next.js/api-routes-static-export`\n          )\n      )\n    }\n  }\n\n  const progress =\n    !options.silent &&\n    createProgress(\n      filteredPaths.length,\n      `${Log.prefixes.info} ${options.statusMessage}`\n    )\n  const pagesDataDir = options.buildExport\n    ? outDir\n    : join(outDir, '_next/data', buildId)\n\n  const ampValidations: AmpPageStatus = {}\n  let hadValidationError = false\n\n  const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\n  // Copy public directory\n  if (!options.buildExport && existsSync(publicDir)) {\n    if (!options.silent) {\n      Log.info('Copying \"public\" directory')\n    }\n    await recursiveCopy(publicDir, outDir, {\n      filter(path) {\n        // Exclude paths used by pages\n        return !exportPathMap[path]\n      },\n    })\n  }\n\n  const worker = new Worker(require.resolve('./worker'), {\n    maxRetries: 0,\n    numWorkers: threads,\n    enableWorkerThreads: nextConfig.experimental.workerThreads,\n    exposedMethods: ['default'],\n  }) as Worker & { default: typeof exportPage }\n\n  worker.getStdout().pipe(process.stdout)\n  worker.getStderr().pipe(process.stderr)\n\n  let renderError = false\n  const errorPaths: string[] = []\n\n  await Promise.all(\n    filteredPaths.map(async (path) => {\n      const result = await worker.default({\n        path,\n        pathMap: exportPathMap[path],\n        distDir,\n        outDir,\n        pagesDataDir,\n        renderOpts,\n        serverRuntimeConfig,\n        subFolders,\n        buildExport: options.buildExport,\n        serverless: isTargetLikeServerless(nextConfig.target),\n        optimizeFonts: nextConfig.experimental.optimizeFonts,\n        optimizeImages: nextConfig.experimental.optimizeImages,\n      })\n\n      for (const validation of result.ampValidations || []) {\n        const { page, result: ampValidationResult } = validation\n        ampValidations[page] = ampValidationResult\n        hadValidationError =\n          hadValidationError ||\n          (Array.isArray(ampValidationResult?.errors) &&\n            ampValidationResult.errors.length > 0)\n      }\n      renderError = renderError || !!result.error\n      if (!!result.error) errorPaths.push(path)\n\n      if (\n        options.buildExport &&\n        typeof result.fromBuildExportRevalidate !== 'undefined'\n      ) {\n        configuration.initialPageRevalidationMap[path] =\n          result.fromBuildExportRevalidate\n      }\n      if (progress) progress()\n    })\n  )\n\n  worker.end()\n\n  // copy prerendered routes to outDir\n  if (!options.buildExport && prerenderManifest) {\n    await Promise.all(\n      Object.keys(prerenderManifest.routes).map(async (route) => {\n        const { srcRoute } = prerenderManifest!.routes[route]\n        const pageName = srcRoute || route\n        const pagePath = getPagePath(pageName, distDir, isLikeServerless)\n        const distPagesDir = join(\n          pagePath,\n          // strip leading / and then recurse number of nested dirs\n          // to place from base folder\n          pageName\n            .substr(1)\n            .split('/')\n            .map(() => '..')\n            .join('/')\n        )\n        route = normalizePagePath(route)\n\n        const orig = join(distPagesDir, route)\n        const htmlDest = join(\n          outDir,\n          `${route}${\n            subFolders && route !== '/index' ? `${sep}index` : ''\n          }.html`\n        )\n        const ampHtmlDest = join(\n          outDir,\n          `${route}.amp${subFolders ? `${sep}index` : ''}.html`\n        )\n        const jsonDest = join(pagesDataDir, `${route}.json`)\n\n        await promises.mkdir(dirname(htmlDest), { recursive: true })\n        await promises.mkdir(dirname(jsonDest), { recursive: true })\n        await promises.copyFile(`${orig}.html`, htmlDest)\n        await promises.copyFile(`${orig}.json`, jsonDest)\n\n        if (await exists(`${orig}.amp.html`)) {\n          await promises.mkdir(dirname(ampHtmlDest), { recursive: true })\n          await promises.copyFile(`${orig}.amp.html`, ampHtmlDest)\n        }\n      })\n    )\n  }\n\n  if (Object.keys(ampValidations).length) {\n    console.log(formatAmpMessages(ampValidations))\n  }\n  if (hadValidationError) {\n    throw new Error(\n      `AMP Validation caused the export to fail. https://err.sh/vercel/next.js/amp-export-validation`\n    )\n  }\n\n  if (renderError) {\n    throw new Error(\n      `Export encountered errors on following paths:\\n\\t${errorPaths\n        .sort()\n        .join('\\n\\t')}`\n    )\n  }\n\n  writeFileSync(\n    join(distDir, EXPORT_DETAIL),\n    JSON.stringify({\n      version: 1,\n      outDirectory: outDir,\n      success: true,\n    }),\n    'utf8'\n  )\n\n  if (telemetry) {\n    await telemetry.flush()\n  }\n}\n"]}