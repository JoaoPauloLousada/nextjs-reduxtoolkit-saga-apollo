{"version":3,"sources":["../../client/next-dev.js"],"names":["__REPLACE_NOOP_IMPORT__","window","EventSource","EventSourcePolyfill","__NEXT_DATA__","assetPrefix","prefix","webpackHMR","next","then","renderCtx","render","devPagesManifestListener","event","data","indexOf","fetch","res","json","manifest","__DEV_PAGES_MANIFEST","catch","err","console","log","unfiltered","addMessageListener","process","env","__NEXT_BUILD_INDICATOR","__NEXT_PRERENDER_INDICATOR","versions","error"],"mappings":"qLACA,gDACA,wFACA,6FACA,uGACA,gFACA,qFACA,gCACA,4DARA,qC,CAUA;AACA;AACA;AACA;AACA;AACAA,uBAAuB,CAEvB;AACA,GAAI,CAACC,MAAM,CAACC,WAAZ,CAAyB,CACvBD,MAAM,CAACC,WAAP,CAAqBC,4BAArB,CACD,CAED,KAAM,CACJC,aAAa,CAAE,CAAEC,WAAF,CADX,EAEFJ,MAFJ,CAIA,KAAMK,CAAAA,MAAM,CAAGD,WAAW,EAAI,EAA9B,CACA,KAAME,CAAAA,UAAU,CAAG,wCAAe,CAAEF,WAAW,CAAEC,MAAf,CAAf,CAAnB,CAEAL,MAAM,CAACO,IAAP,CAAcA,IAAd,CACA,iBAAS,CAAED,UAAF,CAAT,EACGE,IADH,CACQ,CAAC,CAAEC,SAAF,CAAaC,MAAb,CAAD,GAA2B,CAC/B,mCAAoB,CAAEN,WAAW,CAAEC,MAAf,CAApB,EAEA,QAASM,CAAAA,wBAAT,CAAkCC,KAAlC,CAAyC,CACvC,GAAIA,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,kBAAnB,IAA2C,CAAC,CAAhD,CAAmD,CACjDC,KAAK,CAAE,GAAEV,MAAO,kDAAX,CAAL,CACGG,IADH,CACSQ,GAAD,EAASA,GAAG,CAACC,IAAJ,EADjB,EAEGT,IAFH,CAESU,QAAD,EAAc,CAClBlB,MAAM,CAACmB,oBAAP,CAA8BD,QAA9B,CACD,CAJH,EAKGE,KALH,CAKUC,GAAD,EAAS,CACdC,OAAO,CAACC,GAAR,CAAa,kCAAb,CAAgDF,GAAhD,EACD,CAPH,EAQD,CACF,CACDV,wBAAwB,CAACa,UAAzB,CAAsC,IAAtC,CACA,uCAAsB,EAAtB,EAA0BC,kBAA1B,CAA6Cd,wBAA7C,EAEA,GAAIe,OAAO,CAACC,GAAR,CAAYC,sBAAhB,CAAwC,+BACxC,GACEF,OAAO,CAACC,GAAR,CAAYE,0BAAZ,EACA;AACA,EAAE,MAAOH,CAAAA,OAAP,GAAmB,WAAnB,EAAkC,YAAcA,CAAAA,OAAO,CAACI,QAA1D,CAHF,CAIE,CACA,kCACD,CAED;AACA,yBAAe,IAAM,CACnBpB,MAAM,CAACD,SAAD,CAAN,CACD,CAFD,EAGD,CAhCH,EAiCGW,KAjCH,CAiCUC,GAAD,EAAS,CACdC,OAAO,CAACS,KAAR,CAAc,sBAAd,CAAsCV,GAAtC,EACD,CAnCH","sourcesContent":["/* globals __REPLACE_NOOP_IMPORT__ */\nimport initNext, * as next from './'\nimport EventSourcePolyfill from './dev/event-source-polyfill'\nimport initOnDemandEntries from './dev/on-demand-entries-client'\nimport initWebpackHMR from './dev/webpack-hot-middleware-client'\nimport initializeBuildWatcher from './dev/dev-build-watcher'\nimport initializePrerenderIndicator from './dev/prerender-indicator'\nimport { displayContent } from './dev/fouc'\nimport { getEventSourceWrapper } from './dev/error-overlay/eventsource'\n\n// Temporary workaround for the issue described here:\n// https://github.com/vercel/next.js/issues/3775#issuecomment-407438123\n// The runtimeChunk doesn't have dynamic import handling code when there hasn't been a dynamic import\n// The runtimeChunk can't hot reload itself currently to correct it when adding pages using on-demand-entries\n// eslint-disable-next-line no-unused-expressions\n__REPLACE_NOOP_IMPORT__\n\n// Support EventSource on Internet Explorer 11\nif (!window.EventSource) {\n  window.EventSource = EventSourcePolyfill\n}\n\nconst {\n  __NEXT_DATA__: { assetPrefix },\n} = window\n\nconst prefix = assetPrefix || ''\nconst webpackHMR = initWebpackHMR({ assetPrefix: prefix })\n\nwindow.next = next\ninitNext({ webpackHMR })\n  .then(({ renderCtx, render }) => {\n    initOnDemandEntries({ assetPrefix: prefix })\n\n    function devPagesManifestListener(event) {\n      if (event.data.indexOf('devPagesManifest') !== -1) {\n        fetch(`${prefix}/_next/static/development/_devPagesManifest.json`)\n          .then((res) => res.json())\n          .then((manifest) => {\n            window.__DEV_PAGES_MANIFEST = manifest\n          })\n          .catch((err) => {\n            console.log(`Failed to fetch devPagesManifest`, err)\n          })\n      }\n    }\n    devPagesManifestListener.unfiltered = true\n    getEventSourceWrapper({}).addMessageListener(devPagesManifestListener)\n\n    if (process.env.__NEXT_BUILD_INDICATOR) initializeBuildWatcher()\n    if (\n      process.env.__NEXT_PRERENDER_INDICATOR &&\n      // disable by default in electron\n      !(typeof process !== 'undefined' && 'electron' in process.versions)\n    ) {\n      initializePrerenderIndicator()\n    }\n\n    // delay rendering until after styles have been applied in development\n    displayContent(() => {\n      render(renderCtx)\n    })\n  })\n  .catch((err) => {\n    console.error('Error was not caught', err)\n  })\n"]}