import { QueryArgs } from "./common";
import { RedBlackTreeIterator } from "./lib_rbtree";
export declare class SnapDatabase {
    _path: string;
    keyType: string;
    memoryCache: boolean;
    autoFlush: boolean | number;
    isWorker: boolean;
    private _cache;
    private _memTable;
    private _memTableSize;
    private _logHandle;
    private _manifestData;
    private _doingTx;
    private _isCompacting;
    private _isConnecting;
    txNum: number;
    private _bloomCache;
    private _indexFileCache;
    private _index;
    private _maybeCacheClear;
    ready: boolean;
    constructor(_path: string, keyType: string, memoryCache: boolean, autoFlush: boolean | number, isWorker: boolean);
    private _getFiles;
    exists(key: any): boolean;
    delete(key: any): any;
    put(key: any, value: string): void;
    private _getBloom;
    private _maybeGetValue;
    get(key: any, skipCache?: boolean): string | undefined;
    maybeFlushLog(forceFlush?: boolean): void;
    private _maybeCompact;
    startTX(): void;
    endTX(): void;
    compactDone(): void;
    getCount(): any;
    close(): void;
    clear(): void;
    iterators: {
        [key: string]: {
            it: RedBlackTreeIterator;
            r: boolean;
            limit: number;
            count: number;
            end?: any;
            endE?: any;
        };
    };
    newIterator(queryArgs: QueryArgs<any>): string;
    clearIterator(id: string): void;
    nextIterator(id: string): {
        key: any;
        done: boolean;
    };
    private _listenForCommands;
    /**
     * Loads previously saved data into cache if cache is enabled.
     *
     * @private
     * @param {() => void} complete
     * @param {(err) => void} onErr
     * @returns
     * @memberof SnapDB
     */
    private _loadCache;
    /**
     * Get all the keys from log files and index files
     *
     * @private
     * @memberof SnapDB
     */
    private _loadKeysAndLog;
    /**
     * Get all the keys from log files and index files
     *
     * @private
     * @memberof SnapDB
     */
    private _loadKeysFromV109;
    private _readIndexFiles;
}
